package uk.co.richtextformat.patterns {	import flash.display.Sprite;	import flash.display.DisplayObject;	import flash.geom.Point;	import flash.geom.Rectangle;	import flash.events.Event;	import flash.events.EventDispatcher;		public class Hub extends Sprite	{		protected var _state:String;				public function Hub ()		{			super();		}				protected function listen (d:EventDispatcher, e:String):void		{			if ( !d.hasEventListener(e) ) d.addEventListener(e, convey);		}				protected function ignore (d:EventDispatcher, e:String):void		{			if ( d.hasEventListener(e) ) d.removeEventListener(e, convey);		}				protected function convey (e:Event):void		{			throw new Error ("Hub convey ERROR: you must override the Hub's convey method");		}								override public function startDrag(lockCenter:Boolean = false, bounds:Rectangle = null):void { _throwError("startDrag"); }		override public function stopDrag():void { _throwError("stopDrag"); }				override public function areInaccessibleObjectsUnderPoint (point:Point):Boolean { _throwError("areInaccessibleObjectsUnderPoint"); return false; }		override public function dispatchEvent(event:Event):Boolean { _throwError("dispatchEvent"); return false; }		override public function getBounds(targetCoordinateSpace:DisplayObject):Rectangle { _throwError("getBounds"); return new Rectangle() }		override public function willTrigger(type:String):Boolean { _throwError("willTrigger"); return false; }		//override public function propertyIsEnumerable(name:String):Boolean { _throwError("propertyIsEnumerable"); }		//override public function setPropertyIsEnumerable(name:String, isEnum:Boolean = true):void { _throwError("setPropertyIsEnumerable"); }				private function _throwError (meth:String):void		{			throw new Error ("Hub "+meth+" ERROR: almost all MovieClip methods are overridden in the Hub class including this one ("+meth+")");		}	}}